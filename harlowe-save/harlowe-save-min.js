window.harloweSave={extension:".tw-save",ifid:$("tw-storydata").attr("ifid"),get fileName(){const[e,t,a]=(new Date).toJSON().match(/(.+)T(.+)(?=\.)/);return $("tw-storydata").attr("name")+"-save-"+t+"-"+a},export(e,t=!0){const a={ifid:this.ifid,slot:{name:this.fileName,label:"Imported file"},state:null};if(e&&"string"==typeof e){if(a.state=localStorage.getItem(`(Saved Game ${this.ifid}) ${e}`),!a.state)throw new Error(`No save available at slot : ${e}.`);a.slot.name=string,a.slot.label=localStorage.getItem(`(Saved Game Filename ${this.ifid}) ${e}`)}else if(a.state=State.serialise(!1).pastAndPresent,!a.state)throw new Error("Could not serialize the current state.");this._expt(a,t)},_expt(e,t){let a=JSON.stringify(e);t&&(a=btoa(a.replace(/[^\x00-\x7F]/g,(e=>`UNI(${e.codePointAt(0)})`))));const i=URL.createObjectURL(new Blob([a],{type:"text/plain"}));$("<a>").prop({href:i,download:this.fileName+this.extension})[0].click(),setTimeout((()=>URL.revokeObjectURL(i)),40)},decode(e){let t;"{"!==e[0].trim()&&(e=atob(e).replace(/UNI\((\d+)\)/g,((e,t)=>String.fromCodePoint(t))));try{t=JSON.parse(e)}catch(e){throw new Error("Couldn't parse file into a usable object.")}if(t.ifid!==this.ifid)throw new Error("Save file comes from another game!");return t},import(e=!1,t,a){const i=i=>{const{slot:o,state:s}=this.decode(i),r=t??o.name,n=a??o.label;e&&(localStorage.setItem(`(Saved Game ${this.ifid}) ${r}`,s),localStorage.setItem(`(Saved Game Filename ${this.ifid}) ${r}`,n)),State.deserialise(Section.create(),s),requestAnimationFrame(Engine.showPassage.bind(Engine,State.passage,{loadedGame:!0}))};$(`<input type='file' accept=${this.extension}>`).on("change",(function(){const e=new FileReader;e.onload=()=>i(e.result),e.readAsText(this.files[0])})).click()}};