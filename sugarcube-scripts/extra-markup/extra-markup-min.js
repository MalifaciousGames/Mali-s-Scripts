/* Mali's extra markup */

{const e=(e,a,r)=>$("<span>",{class:a+"-insert"}).wiki(Story.get(e).processText()).hide().fadeIn(r?400:0),a={dialog(e){Dialog.create().wikiPassage(e).open()},after(a,r,i){const t=e(a,"after",i);r?r.after(t):$(".passage").append(t)},before(a,r,i){const t=e(a,"before",i);r?r.before(t):$(".passage").prepend(t)},replace(a,r,i){r?r.replaceWith(e(a,"replace",i)):$(".passage").empty().append(e(a,"replace",i))}};Wikifier.Parser.add({name:"extraMarkup",match:"\\[.+?\\[\\[.+?\\]\\]",profiles:["core"],handler(e){let r,i,[t,s,...n]=e.matchText.match(/[^\[\]]+/g);n.length?(n=e.matchText.match(/(?<=\]\[).+(?=\]\])/)[0],n=Wikifier.helpers.shadowHandler(Scripting.desugar(n))):n=!1,t=t.toLowerCase().split("-");const l=t.includes("once"),p=t.includes("self"),c=t.includes("t8n");if(t=t[0],!a[t])return appendError(e.output,`"${t}" is not a valid command.`,e.matchText);if(s.includes("|")?[r,i]=s.split("|"):s.includes("->")?[r,i]=s.split("->"):s.includes("<-")?[i,r]=s.split("<-"):i=r=s,i=Wikifier.helpers.evalText(i),!Story.has(i))return appendError(e.output,`"${i}" passage does not exist.`,e.matchText);const o=$("<a>",{class:"link-internal markup-link markup-"+t}).wiki(r);o.ariaClick({role:"link",one:!!l},(function(){n&&n.call(this),a[t](i,!!p&&o,c),l&&"replace"!==t&&o.remove()})),e.output.appendChild(o[0])}}),Wikifier.Parser.Profile.compile()}